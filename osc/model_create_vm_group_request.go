/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * API version: 1.26
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package osc

// CreateVmGroupRequest struct for CreateVmGroupRequest
type CreateVmGroupRequest struct {
	// A description for the VM group.
	Description string `json:"Description,omitempty"`
	// If true, checks whether you have the required permissions to perform the action.
	DryRun bool `json:"DryRun,omitempty"`
	// The positioning strategy of VMs on hypervisors. By default, or if set to `no-strategy` our orchestrator determines the most adequate position for your VMs. If set to `attract`, your VMs are deployed on the same hypervisor, which improves network performance. If set to `repulse`, your VMs are deployed on a different hypervisor, which improves fault tolerance.
	PositioningStrategy string `json:"PositioningStrategy,omitempty"`
	// One or more IDs of security groups for the VM group.
	SecurityGroupIds []string `json:"SecurityGroupIds"`
	// The ID of the Subnet in which you want to create the VM group.
	SubnetId string `json:"SubnetId"`
	// One or more tags to add to the VM group.
	Tags []ResourceTag `json:"Tags,omitempty"`
	// The number of VMs deployed in the VM group.
	VmCount int32 `json:"VmCount"`
	// The name of the VM group.
	VmGroupName string `json:"VmGroupName"`
	// The ID of the VM template used to launch VMs in the VM group.
	VmTemplateId string `json:"VmTemplateId"`
}
