/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * API version: 1.20
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package osc

// FiltersVolume One or more filters.
type FiltersVolume struct {
	// The dates and times at which the volumes were created.
	CreationDates []string `json:"CreationDates,omitempty"`
	// Whether the volumes are deleted or not when terminating the VMs.
	LinkVolumeDeleteOnVmDeletion bool `json:"LinkVolumeDeleteOnVmDeletion,omitempty"`
	// The VM device names.
	LinkVolumeDeviceNames []string `json:"LinkVolumeDeviceNames,omitempty"`
	// The dates and times at which the volumes were created.
	LinkVolumeLinkDates []string `json:"LinkVolumeLinkDates,omitempty"`
	// The attachment states of the volumes (`attaching` \\| `detaching` \\| `attached` \\| `detached`).
	LinkVolumeLinkStates []string `json:"LinkVolumeLinkStates,omitempty"`
	// One or more IDs of VMs.
	LinkVolumeVmIds []string `json:"LinkVolumeVmIds,omitempty"`
	// The snapshots from which the volumes were created.
	SnapshotIds []string `json:"SnapshotIds,omitempty"`
	// The names of the Subregions in which the volumes were created.
	SubregionNames []string `json:"SubregionNames,omitempty"`
	// The keys of the tags associated with the volumes.
	TagKeys []string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the volumes.
	TagValues []string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the volumes, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.
	Tags []string `json:"Tags,omitempty"`
	// The IDs of the volumes.
	VolumeIds []string `json:"VolumeIds,omitempty"`
	// The sizes of the volumes, in gibibytes (GiB).
	VolumeSizes []int32 `json:"VolumeSizes,omitempty"`
	// The states of the volumes (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`).
	VolumeStates []string `json:"VolumeStates,omitempty"`
	// The types of the volumes (`standard` \\| `gp2` \\| `io1`).
	VolumeTypes []string `json:"VolumeTypes,omitempty"`
}
