/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * API version: 1.26
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package osc

// CreateVmTemplateRequest struct for CreateVmTemplateRequest
type CreateVmTemplateRequest struct {
	// The number of vCores to use for each VM.
	CpuCores int32 `json:"CpuCores"`
	// The processor generation to use for each VM (for example, `v4`).
	CpuGeneration string `json:"CpuGeneration"`
	// The performance of the VMs (`medium` \\| `high` \\|  `highest`).
	CpuPerformance string `json:"CpuPerformance,omitempty"`
	// A description for the VM template.
	Description string `json:"Description,omitempty"`
	// If true, checks whether you have the required permissions to perform the action.
	DryRun bool `json:"DryRun,omitempty"`
	// The ID of the OMI to use for each VM. You can find a list of OMIs by calling the [ReadImages](#readimages) method.
	ImageId string `json:"ImageId"`
	// The name of the keypair to use for each VM.
	KeypairName string `json:"KeypairName,omitempty"`
	// The amount of RAM to use for each VM.
	Ram int32 `json:"Ram"`
	// One or more tags to add to the VM template.
	Tags []ResourceTag `json:"Tags,omitempty"`
	// The name of the VM template.
	VmTemplateName string `json:"VmTemplateName"`
}
